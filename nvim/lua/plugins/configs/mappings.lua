local M = {}
local wk = require("which-key")

function M.setup()
	wk.add({
		{ "-", "<cmd>Oil<cr>", desc = "Files" },
		{ ";", ":", desc = "Cmd" },
		{ "<A-h>", "<cmd>split<cr>", desc = "Split Horizontally" },
		{ "<A-t>", '<cmd>lua require("FTerm").toggle()<cr>', desc = "Terminal" },
		{ "<A-v>", "<cmd>vsplit<cr>", desc = "Split Vertically" },
		{ "<S-Tab>", "<cmd>bprevious<cr>", desc = "Previous Buffer" },
		{ "<Tab>", "<cmd>bnext<cr>", desc = "Next Buffer" },

		{
			mode = { "i" },
			{ "<C-c>", "<esc>", desc = "Esc" },
			{ "<C-h>", "<Left>", desc = "Left" },
			{ "<C-i>", "<cmd>IconPickerInsert<cr>", desc = "Pick Icon", icon = { icon = "" } },
			{ "<C-j>", "<Down>", desc = "Down" },
			{ "<C-k>", "<Up>", desc = "Up" },
			{ "<C-l>", "<Right>", desc = "Right" },
		},

		{
			mode = { "i", "n", "v" },
			{ "<A-b>", "<cmd>MoveWord(-1)<cr>", desc = "Move Word Backward" },
			{ "<A-f>", "<cmd>MoveWord(1)<cr>", desc = "Move Word Forward" },
			{ "<A-h>", "<cmd>MoveHChar(-1)<cr>", desc = "Move Char Left" },
			{ "<A-j>", "<cmd>MoveLine(1)<cr>", desc = "Move Line Down" },
			{ "<A-k>", "<cmd>MoveLine(-1)<cr>", desc = "Move Line Uo" },
			{ "<A-l>", "<cmd>MoveHChar(1)<cr>", desc = "Move Char Right" },
		},

		{ "<A-t>", '<C-\\><C-n><cr>lua require("FTerm").toggle()<cr>', desc = "Terminal", mode = "t" },

		{
			mode = { "n", "v" },
			{
				"<leader>/",
				"<ESC><cmd>lua require('Comment.api').toggle.linewise(vim.fn.visualmode())<CR>",
				desc = "Comment Toggle",
				icon = { icon = "󰅺" },
			},
			{ "<leader>=", "z=", desc = "Spelling Suggestions", icon = { icon = "" } },
			{ "<leader>C", "<CMD>PickColor<CR>", desc = "Pick Color", icon = { icon = "" } },
			{ "<leader>D", "<cmd>Dashboard<CR>", desc = "Dashboard", icon = { icon = "󰧨" } },
			{ "<leader>E", "<cmd>Neotree close<CR>", desc = "Neotree Close", icon = { icon = "" } },
			{ "<leader>H", "<CMD>Twilight<CR>", desc = "Toggle Twilight", icon = { icon = "󰉦" } },
			{ "<leader>M", "<cmd>WhichKey<cr>", desc = "Mappings", icon = { icon = "" } },
			{ "<leader>N", "<CMD>Navbuddy<CR>", desc = "Nav Buddy", icon = { icon = "󱘎" } },

			{ "<leader>S", group = "Sessions", icon = { icon = "" } },
			{ "<leader>SD", "<cmd>Autosession delete<cr>", desc = "Find and Delete" },
			{ "<leader>Sd", "<cmd>SessionDelete<cr>", desc = "Delete" },
			{ "<leader>Sf", "<cmd>Autosession search<cr>", desc = "Find" },
			{ "<leader>Sr", "<cmd>SessionRestore<cr>", desc = "Restore" },
			{ "<leader>Ss", "<cmd>SessionSave<cr>", desc = "Save" },

			{ "<leader>T", group = "Trouble", icon = { icon = "" } },
			{ "<leader>Tb", "<cmd>Trouble diagnostics toggle filter.buf=0<cr>", desc = "Buffer Diagonostics" },
			{ "<leader>Td", "<cmd>Trouble diagnostics toggle<cr>", desc = "Diagonostics" },
			{ "<leader>Tl", "<cmd>Trouble loclist toggle<cr>", desc = "Location List" },
			{ "<leader>Tq", "", desc = "Quickfix List" },
			{
				"<leader>Tr",
				"<cmd>Trouble lsp toggle focus=false win.position=right<cr>",
				desc = "Definitions / References",
			},
			{ "<leader>Ts", "<cmd>Trouble symbols toggle focus=false<cr>", desc = "Symbols" },
			{ "<leader>X", "<cmd>%bd|e#|bd#<CR>", desc = "Close All Buffer", icon = { icon = "󰘪" } },
			{
				"<leader>Z",
				require("telescope").extensions.zoxide.list,
				desc = "zoxide find",
				icon = { icon = "󰈞" },
			},
			{ "<leader>a", "za", desc = "Toggle Fold", icon = { icon = "" } },
			{ "<leader>A", "zA", desc = "Toggle Folds", icon = { icon = "" } },

			{ "<leader>b", group = "ChatGPT", icon = { icon = "󱄳" } },
			{ "<leader>ba", "<cmd>ChatGPTActAs<CR>", desc = "ChatGPT ActAs" },
			{ "<leader>be", "<cmd>ChatGPTEditWithInstructions<CR>", desc = "ChatGPT Edit w Ins" },
			{ "<leader>bo", "<cmd>ChatGPT<CR>", desc = "ChatGPT Open" },

			{ "<leader>c", group = "Boxes", icon = { icon = "" } },
			{ "<leader>cb", "<Cmd>CBccbox<CR>", desc = "Box Title" },
			{ "<leader>cd", "<Cmd>CBd<CR>", desc = "Remove a box" },
			{ "<leader>cl", "<Cmd>CBline<CR>", desc = "Simple Line" },
			{ "<leader>cm", "<Cmd>CBllbox14<CR>", desc = "Marked" },
			{ "<leader>ct", "<Cmd>CBllline<CR>", desc = "Titled Line" },

			{ "<leader>d", group = "Debugger", icon = { icon = "" } },
			{ "<leader>db", "<cmd>DapToggleBreakpoint<CR>", desc = "Toggle Breakpoint" },
			{ "<leader>dc", "<cmd>DapContinue<CR>", desc = "Continue" },
			{ "<leader>di", "<cmd>DapStepInto<CR>", desc = "Step Into" },
			{ "<leader>do", "<cmd>DapStepOver<CR>", desc = "Step Over" },
			{ "<leader>ds", "<cmd>DapShowLog<CR>", desc = "Log" },
			{ "<leader>dt", "<cmd>DapTerminate<CR>", desc = "Terminate" },
			{ "<leader>du", "<cmd>lua require('dapui').toggle()<CR>", desc = "Toggle Dap UI" },
			{ "<leader>e", "<cmd>Neotree focus<CR>", desc = "NeoTree", icon = { icon = "" } },

			{ "<leader>f", group = "Telescope", icon = { icon = "" } },
			{ "<leader>fP", "<cmd>Telescope planets<CR>", desc = "Find Planets" },
			{ "<leader>fb", "<cmd>Telescope buffers<cr>", desc = "Find Existing Buffers" },
			{ "<leader>fd", "<cmd>Telescope diagnostics<cr>", desc = "Find Diagonostics" },
			{ "<leader>ff", "<cmd>Telescope find_files<cr>", desc = "Find Files" },
			{ "<leader>fg", "<cmd>Telescope live_grep<cr>", desc = "Find by Grep" },
			{ "<leader>fh", "<cmd>Telescope help_tags<cr>", desc = "Find Help" },
			{ "<leader>fi", "<cmd>Telescope package_info<CR>", desc = "Package Info" },
			{ "<leader>fk", "<cmd>Telescope keymaps<cr>", desc = "Find Keymaps" },
			{ "<leader>fm", "<cmd>Telescope media_files<CR>", desc = "Find Media Files" },
			{ "<leader>fp", "<cmd>Telescope project<CR>", desc = "Find Projects" },
			{ "<leader>fr", "<cmd>Telescope resume<cr>", desc = "Find Resume" },
			{ "<leader>fs", "<cmd>Telescope builtin<cr>", desc = "Find Select Telescope" },
			{ "<leader>ft", "<cmd>Telescope themes<CR>", desc = "Themes" },
			{ "<leader>fo", "<cmd>Telescope oldfiles<cr>", desc = "Find Recent Files" },
			{ "<leader>fw", "<cmd>Telescope grep_string<cr>", desc = "Find Current Word" },
			{ "<leader>fz", "<cmd>Telescope lazy_plugins<CR>", desc = "Lazy Plugins" },

			{ "<leader>h", group = "Harpoon", icon = { icon = "" } },
			{ "<leader>hf", "<cmd>lua require('harpoon.ui').nav_file(1)<cr>", desc = "First" },
			{ "<leader>hm", "<cmd>lua require('harpoon.mark').add_file()<cr>", desc = "Mark" },
			{ "<leader>hn", "<cmd>lua require('harpoon.ui').nav_prev()<cr>", desc = "Next" },
			{ "<leader>ho", "<cmd>lua require('harpoon.ui').toggle_quick_menu()<cr>", desc = "Open" },
			{ "<leader>hp", "<cmd>lua require('harpoon.ui').nav_next()<cr>", desc = "Previos" },
			{ "<leader>i", "<cmd>IconPickerNormal<cr>", desc = "Pick Icon", icon = { icon = "" } },

			{ "<leader>l", group = "Lsp", icon = { icon = "" } },
			{ "<leader>lc", vim.lsp.buf.code_action, desc = "Code Action" },
			{ "<leader>ld", vim.lsp.buf.declaration, desc = "Definition" },
			{ "<leader>lf", vim.lsp.buf.references, desc = "References" },
			{ "<leader>lk", vim.lsp.buf.hover, desc = "Hover" },
			{ "<leader>lr", vim.lsp.buf.rename, desc = "Rename" },
			{ "<leader>m", "<cmd>lua require('treesj').toggle()<CR>", desc = "TSJ Toggle" },

			{ "<leader>n", group = "Manage Packages", icon = { icon = "" } },
			{ "<leader>nc", require("package-info").change_version, desc = "Change Version" },
			{ "<leader>nd", require("package-info").delete, desc = "Delete" },
			{ "<leader>ni", require("package-info").install, desc = "Install" },
			{ "<leader>nt", require("package-info").toggle, desc = "Toggle" },
			{ "<leader>nu", require("package-info").update, desc = "Update" },

			{ "<leader>o", group = "Obsodian", icon = { icon = "" } },
			{ "<leader>oL", "<cmd>ObsidianLinkNew<CR>", desc = "New Link <Name>" },
			{ "<leader>oS", "<cmd>ObsidianSearch<CR>", desc = "Search <Name>" },
			{ "<leader>oT", "<cmd>ObsidianToday<CR>", desc = "Today <Day>" },
			{ "<leader>oY", "<cmd>ObsidianTomorrow<CR>", desc = "Tomorrow" },
			{ "<leader>ob", "<cmd>ObsidianBacklinks<CR>", desc = "Back Links" },
			{ "<leader>oc", "<cmd>ObsidianToggleCheckbox<CR>", desc = "Toggle Checkbox" },
			{ "<leader>oe", "<cmd>ObsidianExtractNote<CR>", desc = "Extract Selected to New" },
			{ "<leader>of", "<cmd>ObsidianFollowLink<CR>", desc = "Follow Link" },
			{ "<leader>ol", "<cmd>ObsidianLink<CR>", desc = "Link <Name>" },
			{ "<leader>on", "<cmd>ObsidianNew<CR>", desc = "Create New <Create>" },
			{ "<leader>oo", "<cmd>ObsidianOpen<CR>", desc = "Open <Title>" },
			{ "<leader>op", "<cmd>ObsidianPasteImg<CR>", desc = "Pase Img <Img Name>" },
			{ "<leader>or", "<cmd>ObsidianRename<CR>", desc = "Rename <New Name>" },
			{ "<leader>os", "<cmd>ObsidianQuickSwitch<CR>", desc = "Quick Switch" },
			{ "<leader>ot", "<cmd>ObsidianTags<CR>", desc = "Tag [Tag]" },
			{ "<leader>ov", "<cmd>ObsidianLinks<CR>", desc = "Links" },
			{ "<leader>ow", "<cmd>ObsidianWorkspace<CR>", desc = "Switch Workspace <Name>" },
			{ "<leader>ox", "<cmd>ObsidianTemplate<CR>", desc = "Template <Name>" },
			{ "<leader>oy", "<cmd>ObsidianYesterday<CR>", desc = "Yesterday" },
			{ "<leader>q", "<cmd>quit<CR>", desc = "Quit" },

			{ "<leader>t", group = "TSTools", icon = { icon = "" } },
			{ "<leader>tR", "<cmd>TSToolsRemoveUnused<cr>", desc = "Remove Unused Statement" },
			{ "<leader>ta", "<cmd>TSToolsAddMissingImports<cr>", desc = "Add Missing Imports" },
			{ "<leader>td", "<cmd>TSToolsGoToSourceDefinition<cr>", desc = "Source Definition" },
			{ "<leader>tf", "<cmd>TSToolsFixAll<cr>", desc = "Fix Errors" },
			{ "<leader>to", "<cmd>TSToolsOrganizeImports<cr>", desc = "Organize" },
			{ "<leader>tr", "<cmd>TSToolsRemoveUnusedImports<cr>", desc = "Remove Unused" },
			{ "<leader>ts", "<cmd>TSToolsSortImports<cr>", desc = "Sort" },
			{ "<leader>w", "<cmd>write<cr>", desc = "Save", icon = { icon = "󰆓" } },
			{ "<leader>x", "<cmd>bdelete<CR>", desc = "Close Buffer", icon = { icon = "󰅙" } },
			{ "<leader>y", "<cmd>%y+<cr>", desc = "Copy All", icon = { icon = "" } },

			{ "<leader>z", group = "Lazy", icon = { icon = "󰒲" } },
			{ "<leader>zC", "<cmd>Lazy clean<cr>", desc = "Clean" },
			{ "<leader>zS", "<cmd>Lazy status<cr>", desc = "Status" },
			{ "<leader>zc", "<cmd>Lazy check<cr>", desc = "Check" },
			{ "<leader>zi", "<cmd>Lazy install<cr>", desc = "Install" },
			{ "<leader>zr", "<cmd>Lazy restore<cr>", desc = "Restore" },
			{ "<leader>zs", "<cmd>Lazy sync<cr>", desc = "Sync" },
			{ "<leader>zu", "<cmd>Lazy update<cr>", desc = "Update" },
			{ "<leader>zz", "<cmd>Lazy<cr>", desc = "Lazy" },

			{ "<leader>g", group = "Git", { icon = "" } },
			{ "<leader>gi", group = "issue" },
			{ "<leader>gic", "<cmd>Octo issue close<CR>", desc = "close" },
			{ "<leader>gir", "<cmd>Octo issue reopen<CR>", desc = "reopen" },
			{ "<leader>gl", "<cmd>LazyGit<CR>", desc = "LazyGit" },

			{ "<leader><leader>", group = "Extra Mappings", icon = { icon = "" } },
			{ "<leader><leader>p", "<CMD>MarkdownPreviewToggle<CR>", desc = "Markdown Preview" },
			{ "<leader><leader>r", "<CMD>source ~/.config/nvim/init.lua<CR>", desc = "Reload Editor" },
		},
	})
end

return M
